name: CI

on:
  workflow_call:
  pull_request:
    branches: [ "main" ]

env:
  # Use for multi-branch deployment
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:

  lint_formatting:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev

      - name: Linting code
        run: poetry run ruff check . # INFO
        continue-on-error: true

      - name: Formating code
        run: poetry run ruff format --check . # INFO
        continue-on-error: true

  unit_tests:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev

      - name: Type checking
        run: poetry run pyright .

      - name: Run automated tests
        run: poetry run coverage run -m pytest tests -v -s

      - name: Generate coverage report
        run: |
          poetry run coverage report -m
          poetry run coverage xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: false
